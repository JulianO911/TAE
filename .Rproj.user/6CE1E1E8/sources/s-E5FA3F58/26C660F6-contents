---
title: "Depuración accidentalidad en motos en Medellín"
author: "Deivid Zhang Figueroa"
date: "25/10/2020"
output: 
  html_document: 
    css: estilo2.css
    doc: yes
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE,
                      message = FALSE,
                      warning = FALSE)
```

## Librerías
```{r}
library(tidyverse)
library(summarytools)
```


```{r}
acc_med <- read.csv("Accidentalidad_con_motos_municipio_de_Medell_n_actualizado_a_julio_2020.csv", encoding = "UTF-8")
```


## Resumen incial de variable por variable de la base de datos original
```{r}
options(width = 480)
dfSummary(acc_med)
```

## Función que intercambia los valores de mes y años si los encuentra 
## inconsistentes en el orden escrito.
```{r}
intercambia <- function(x){
  if(as.numeric(x[2]) > 12){
    aux <- x[1] 
    x[1] <- x[2]
    x[2] <- aux
  }
  fecha_corr <- paste(x, collapse = "/")
  return(fecha_corr)
}

```

## reasignación de ciertas zonas a sus respectivas Comunas
Se reasigna ciertas zonas (de acuero al crieterio personal) a sus respectivas Comunas de acuerdo a los datos de la alcaldía.
```{r}
acc_med$ZONA[acc_med$ZONA == "LA MOTA"] <- "COMUNA 16"
acc_med$ZONA[acc_med$ZONA == "Comuna 11"] <- "COMUNA 11"
acc_med$ZONA[acc_med$ZONA == "Comuna 10"] <- "COMUNA 10"
acc_med$ZONA[acc_med$ZONA == "Comuna 14"] <- "COMUNA 14"
acc_med$ZONA[acc_med$ZONA == "Comuna 15"] <- "COMUNA 15"
acc_med$ZONA[acc_med$ZONA == "Comuna 16"] <- "COMUNA 16"
acc_med$ZONA[acc_med$ZONA == "TERMNAL SUR"] <- "COMUNA 15"
acc_med$ZONA[acc_med$ZONA == "LAS VEGAS"] <- "COMUNA 14"
acc_med$ZONA[acc_med$ZONA == "EL POBLADO"] <- "COMUNA 14"
acc_med$ZONA[acc_med$ZONA == "LA MINORISTA"] <- "COMUNA 10"
acc_med$ZONA[acc_med$ZONA == "LAURELES"] <- "COMUNA 11"
acc_med$ZONA[acc_med$ZONA == "ALPUJARRA"] <- "COMUNA 10"
acc_med$ZONA[acc_med$ZONA == "SAN ANTONIO DE PRADO Jurisdicción"] <- "Corregimiento 80"
acc_med$ZONA[acc_med$ZONA == "CORREGIMIENTO SANTA ELENA Jurisdicción"] <- "Corregimiento 90"
acc_med$ZONA[acc_med$ZONA == "CARRETERA SANTA ELENA Jurisdicción"] <- "Corregimiento 90"
acc_med$ZONA[acc_med$ZONA == "CORREGIMIENTO SAN CRISTOBAL Jurisdicción"] <- "Corregimiento 60"
acc_med$ZONA[acc_med$ZONA == "CORREGIMIENTO PALMITAS Jurisdicción"] <- "Corregimiento 50"
acc_med$ZONA[acc_med$ZONA == "CORREGI. BELEN ALTAVISTA Jurisdicción"] <- "Corregimiento 70"
acc_med$ZONA[acc_med$ZONA == "CENTRO"] <- "COMUNA 10"
```

## Depuración y creación de variables
- Primeramente, se modifica la variable FECHA_ACCIDENTE, de donde se ordena en año, mes y día, además se elimina las horas que se encontraba allí originalmente.
Luego, se crea una nueva variable llamado FECHA_COMPLETA de donde se le une los datos de la variable FECHA_ACCIDENTE con la variable HORA_ACCIDENTE.
- Seguidamente, se crea una nueva variable llamado Nivel.de.gravedad, de donde se le asigna un número entero de 1-3 de acuerdo al tipo de gravedad de la variable GRAVEDAD_ACCIDENTE.
- Después se crea otra variable llamado Dia.de.la.semana de donde se presenta el día del accidente ordenado de acuerdo a mi criterio.
- Se elimina la zona "."
- Por último se crea la variable Hora.del.día de donde se presenta la hora como número continuo a partir de la hora de la nueva variable FECHA_COMPLETA.
```{r}
acc_med2 <- acc_med %>% 
  mutate(NRO_RADICADO = factor(NRO_RADICADO),
         AÑO_ACCIDENTE = factor(AÑO_ACCIDENTE),
         FECHA_ACCIDENTE = as.Date(FECHA_ACCIDENTE,"%m/%d/%Y"),
         HORA_ACCIDENTE = str_extract(HORA_ACCIDENTE, "\\d{2}\\:{1}\\d{2}\\:{1}\\d{2}"),
         FECHA_COMPLETA = as.POSIXct(strptime(strftime(paste(FECHA_ACCIDENTE,HORA_ACCIDENTE),
                                                       "%m-%d-%Y %H:%M:%S"), "%m-%d-%Y %H:%M:%S")),
         CLASE_ACCIDENTE = factor(CLASE_ACCIDENTE),
         GRAVEDAD_ACCIDENTE = factor(GRAVEDAD_ACCIDENTE),
         ZONA = factor(ZONA),
         Diseño.Vía = factor(Diseño.Vía),
         Nivel.de.gravedad = ifelse(GRAVEDAD_ACCIDENTE == "MUERTO",3,ifelse(GRAVEDAD_ACCIDENTE == "HERIDO",2,1)),
         Dia.de.la.semana = c("Lunes","Martes","Miércoles","Jueves","Viernes","Sábado","Domingo")[as.POSIXlt(FECHA_COMPLETA)$wday + 1],
         Hora.del.día = as.numeric(format(FECHA_COMPLETA, "%H")) + as.numeric(format(FECHA_COMPLETA, "%M"))/60) %>% 
  filter(ZONA !=".") %>%
  drop_na()
```


## Resumen variable por variable de la base de datos depurada
```{r}
dfSummary(acc_med2)
```

```{r}
# Guarda la base depurada en formato ".RData".
save(acc_med2, file = "accidentalidad_med.RData")
```

```{r}
# Borra todos los objetos del espacio de trabajo.
rm(list = ls())
```


